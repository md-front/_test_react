{"version":3,"sources":["helpers.js","styles/components/Alert.module.scss","styles/components/Items/ItemsVacancy.module.scss","styles/components/Header.module.scss","styles/components/Items/ItemsItem.module.scss","styles/components/Items/ItemsInner.module.scss","styles/components/Items/ItemsTitle.module.scss","assets/star.svg","assets/del.svg","styles/components/Items/Items.module.scss","styles/components/Items/ItemsList.module.scss","components/Header.jsx","components/Items/ItemsVacancy.jsx","components/Items/ItemsItem.jsx","components/Items/ItemsList.jsx","components/Items/ItemsInner.jsx","components/Items/ItemsSection.jsx","components/Items/ItemsTitle.jsx","components/Items/Items.jsx","components/Alert.jsx","pages/Main.jsx","App.js","index.js"],"names":["module","exports","setLS","key","payload","localStorage","setItem","JSON","stringify","getLS","parse","getItem","sortByReduction","arr","param","sort","a","b","sortByIncreasing","parseDateString","dateString","split","Date","checkItems","state","some","element","btns","img","fav","className","disableClassName","disableName","text","actionType","del","Header","props","styles","actions","type","onClick","showAlert","title","map","btn","index","clearItems","src","alt","ItemsVacancy","isHover","toggleBlacklist","bind","handleMouseHover","this","setState","e","preventDefault","stopPropagation","params","id","vacancy","parentId","employer","handleClickAction","salary","href","alternate_url","link","onMouseEnter","onMouseLeave","target","rel","name","popup","from","to","snippet","requirement","description","dangerouslySetInnerHTML","__html","React","Component","ItemsItem","logoUrl","item","items","logo_urls","is_jun","jun","value","is_del","ItemsList","haveVisibleItem","GROUP_NAMES","is_fav","is_new","is_salary","default","ItemsInner","itemsList","ACTION_TYPES","favorites","blacklist","DEFAULT_SORT","ItemsSection","groups","section","isLoaded","vacancies","favoritesAction","blacklistAction","visibleVacancies","getVacancies","groupVacancies","loadedData","handleLoaded","prevAllProps","init","forEach","action","activityCheck","length","Object","keys","prevProps","actualProps","prevIds","actualIds","filter","includes","changedId","find","vacancyId","isAdding","prevGroup","newGroup","itemIndex","PARAMS","adding","newGroupId","createNewGroup","createGroup","removing","currentParams","group","sortValue","call","push","splice","tempIndex","topVacancySort","updatedData","getVacanciesStep","zeroStep","result","firstStep","pagesLeft","window","LOAD_ALL_DATA","step","pageNum","exp","fetch","location","response","ok","json","pages","Error","status","validVacancies","lastValidDate","NEW_IN_DAYS","match","NECESSARY","UNNECESSARY","employerId","hasOwnProperty","isJun","JUNIOR","created_at","setGroupParams","paramName","groupItems","values","i","groupType","renderItems","renderItemsIsEmpty","renderItemsOnLoad","ItemsTitle","is_active","active","handleClick","regions","sections","activeSectionId","handleClickSectionTitle","activeSection","prevActiveSection","nav","quantity","activeQuantity","Alert","alert","ref","alertRef","close","closeAlert","wip","new","Main","alertShowed","getDataFromStorage","createRef","closeByEsc","toggleAlert","alertClickOutside","createAlertHandlers","removeAlertHandlers","document","addEventListener","removeEventListener","current","contains","storage","empty","createEmptyStore","region","sectionId","setItems","isFavActive","isBtnActive","isDelActive","App","RegExp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12221c24.chunk.js","sourcesContent":["module.exports = {\r\n\r\n    /** Storage Actions */\r\n    setLS(key, payload) {\r\n        return localStorage.setItem(key, JSON.stringify(payload))\r\n    },\r\n    getLS(key) {\r\n        return JSON.parse(localStorage.getItem(key))\r\n    },\r\n\r\n    /**  Sort */\r\n    sortByReduction(arr, param) {\r\n        return arr.sort((a,b) => b[param] - a[param]);\r\n    },\r\n    sortByIncreasing(arr, param) {\r\n        return arr.sort((a,b) => a[param] - b[param]);\r\n    },\r\n\r\n    /**  Date */\r\n    parseDateString(dateString) {\r\n        const arr = dateString.split(/\\D/);\r\n        return new Date(arr[0], arr[1]-1, arr[2], arr[3], arr[4], arr[5]);\r\n    },\r\n\r\n    /** Check */\r\n    checkItems(arr, param, state = true) {\r\n        return arr && arr.some(element => state ? element[param] : !element[param])\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favColor\":\"rgba(255, 165, 0,.4)\",\"newColor\":\"rgba(128, 0, 128, .35)\",\"junColor\":\"rgba(0, 128, 0, .4)\",\"salaryColor\":\"rgba(255, 127, 80, .5)\",\"defaultColor\":\"rgba(169, 169, 169, .4)\",\"alert\":\"Alert_alert__2UfvZ\",\"item\":\"Alert_item__RjINW\",\"list-item\":\"Alert_list-item__1NZng\",\"fav\":\"Alert_fav__17Z9A Alert_list-item__1NZng\",\"new\":\"Alert_new__ZwVcv Alert_list-item__1NZng\",\"jun\":\"Alert_jun__3hfi6 Alert_list-item__1NZng\",\"salary\":\"Alert_salary__1cpSP Alert_list-item__1NZng\",\"default\":\"Alert_default__1uNat Alert_list-item__1NZng\",\"close\":\"Alert_close__1irvb\",\"wip\":\"Alert_wip__cfRMk Alert_list-item__1NZng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ItemsVacancy_link__3nD_C\",\"del\":\"ItemsVacancy_del__2pi-D\",\"text\":\"ItemsVacancy_text__3Crsq\",\"popup\":\"ItemsVacancy_popup__3FzUR\",\"salary\":\"ItemsVacancy_salary__2N1lY\",\"description\":\"ItemsVacancy_description__cp2LA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favColor\":\"rgba(255, 165, 0,.4)\",\"newColor\":\"rgba(128, 0, 128, .35)\",\"junColor\":\"rgba(0, 128, 0, .4)\",\"salaryColor\":\"rgba(255, 127, 80, .5)\",\"defaultColor\":\"rgba(169, 169, 169, .4)\",\"actions\":\"Header_actions__2ISm4\",\"btns\":\"Header_btns__1rSaA\",\"show-alert\":\"Header_show-alert__1YGDy\",\"btn\":\"Header_btn__1y_LX\",\"disabled\":\"Header_disabled__1cPx7\",\"fav\":\"Header_fav__3aTWp Header_btn__1y_LX\",\"fav-disabled\":\"Header_fav-disabled__3H-5I Header_fav__3aTWp Header_btn__1y_LX Header_disabled__1cPx7\",\"del\":\"Header_del__3kqke Header_btn__1y_LX\",\"del-disabled\":\"Header_del-disabled__QbXf1 Header_del__3kqke Header_btn__1y_LX Header_disabled__1cPx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemsItem_item__1l320\",\"jun\":\"ItemsItem_jun__3z_Xx ItemsItem_item__1l320\",\"title\":\"ItemsItem_title__1VNP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favColor\":\"rgba(255, 165, 0,.4)\",\"newColor\":\"rgba(128, 0, 128, .35)\",\"junColor\":\"rgba(0, 128, 0, .4)\",\"salaryColor\":\"rgba(255, 127, 80, .5)\",\"defaultColor\":\"rgba(169, 169, 169, .4)\",\"group\":\"ItemsInner_group__BZ0tP\",\"title\":\"ItemsInner_title__2PTUb\",\"is_fav\":\"ItemsInner_is_fav__SDvDa ItemsInner_group__BZ0tP\",\"is_new\":\"ItemsInner_is_new__2rtEK ItemsInner_group__BZ0tP\",\"is_jun\":\"ItemsInner_is_jun__37x1D ItemsInner_group__BZ0tP\",\"is_salary\":\"ItemsInner_is_salary__2SOrw ItemsInner_group__BZ0tP\",\"default\":\"ItemsInner_default___YoW2 ItemsInner_group__BZ0tP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ItemsTitle_title__x8aKA\",\"active\":\"ItemsTitle_active__JoYEW ItemsTitle_title__x8aKA\"};","module.exports = __webpack_public_path__ + \"static/media/star.80b7ccfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/del.0ce28e41.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Items_nav__j5C8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"ItemsList_items__1dzit\"};","import React from 'react';\r\nimport styles from '../styles/components/Header.module.scss';\r\nimport fav from '../assets/star.svg';\r\nimport del from '../assets/del.svg';\r\n\r\nconst btns = [\r\n    {\r\n        img: fav,\r\n        className: 'fav',\r\n        disableClassName: 'fav-disabled',\r\n        disableName: 'isFavActive',\r\n        text: 'Очистить избранное',\r\n        actionType: 'favorites',\r\n    },\r\n    {\r\n        img: del,\r\n        className: 'del',\r\n        disableClassName: 'del-disabled',\r\n        disableName: 'isDelActive',\r\n        text: 'Вернуть скрытые вакансии',\r\n        actionType: 'blacklist',\r\n    },\r\n]\r\n\r\nexport default function Header(props) {\r\n\r\n    return (\r\n        <header>\r\n            <div className={ styles.actions }>\r\n                <button type=\"button\"\r\n                        onClick={ props.showAlert }\r\n                        className={ styles['show-alert'] }\r\n                        title=\"Показать описание\">!</button>\r\n\r\n                <div className={ styles.btns }>\r\n                    { btns.map((btn, index) =>\r\n                        <button type=\"button\"\r\n                                key={ index }\r\n                                className={ props[btn.disableName] ? styles[btn.className] : styles[btn.disableClassName] }\r\n                                onClick={ () => props.clearItems(btn.actionType) }>\r\n                            { btn.text }\r\n                            <img src={ btn.img } alt=\"icon\"/>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styles from '../../styles/components/Items/ItemsVacancy.module.scss';\r\n\r\nexport default class ItemsVacancy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isHover: false,\r\n        }\r\n\r\n        this.toggleBlacklist = this.toggleBlacklist.bind(this);\r\n        this.handleMouseHover = this.handleMouseHover.bind(this);\r\n    }\r\n\r\n    handleMouseHover() {\r\n        const isHover = !this.state.isHover;\r\n\r\n        this.setState({ isHover })\r\n    }\r\n\r\n    toggleBlacklist(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const params = {\r\n            id: this.props.vacancy.id,\r\n            parentId: this.props.vacancy.employer.id\r\n        };\r\n\r\n        this.props.handleClickAction('blacklist', params);\r\n    }\r\n\r\n    render() {\r\n        const vacancy = this.props.vacancy;\r\n        const salary = vacancy.salary;\r\n\r\n        return (\r\n            <a href={ vacancy.alternate_url }\r\n               className={ styles.link }\r\n               onMouseEnter={this.handleMouseHover}\r\n               onMouseLeave={this.handleMouseHover}\r\n               target=\"_blank\"\r\n               rel=\"noopener noreferrer\">\r\n                <span className={ styles.text } >\r\n                    <span>{ salary && '$' }&nbsp;</span>{ vacancy.name }\r\n                </span>\r\n\r\n                { this.state.isHover &&\r\n                    <div className={ styles.popup }>\r\n                        { salary &&\r\n                            <span className={ styles.salary }>{ salary.from }{ salary.from && salary.to ? ' - ' : '' }{ salary.to }</span>\r\n                        }\r\n                        { vacancy.snippet && vacancy.snippet.requirement &&\r\n                            <span className={ styles.description } dangerouslySetInnerHTML={{  __html: this.props.vacancy.snippet.requirement  }} />\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                <button type=\"button\"\r\n                        className={ styles.del }\r\n                        onClick={ this.toggleBlacklist }/>\r\n\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from '../../styles/components/Items/ItemsItem.module.scss';\r\nimport ItemsVacancy from './ItemsVacancy';\r\n\r\nexport default function ItemsItem(props) {\r\n\r\n    const logoUrl = props.item.items[0].employer.logo_urls;\r\n\r\n    function toggleFavorite() {\r\n        const params = {\r\n            id: props.item.id,\r\n            parentId: props.item.sort.value\r\n        };\r\n\r\n        props.handleClickAction('favorites', params)\r\n    }\r\n\r\n    return (\r\n        <div className={ props.item.is_jun ? styles.jun : styles.item }>\r\n            <div className={ styles.title }\r\n                 onClick={ toggleFavorite }\r\n                 title=\"В избранное\">\r\n                <h2>{ props.item.name }</h2>\r\n\r\n                { logoUrl && <img src={logoUrl['90']} alt=\"logo\"/> }\r\n            </div>\r\n\r\n            { props.item.items.map((vacancy, index) =>\r\n                !vacancy.is_del &&\r\n                <ItemsVacancy vacancy={vacancy}\r\n                              key={index}\r\n                              handleClickAction={props.handleClickAction} />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styles from '../../styles/components/Items/ItemsList.module.scss';\r\nimport ItemsItem from './ItemsItem';\r\n\r\nexport default function ItemsList(props) {\r\n\r\n    return (\r\n        <div className={ styles.items }>\r\n            { props.items.map((item, index) =>\r\n                item.haveVisibleItem &&\r\n                <ItemsItem item={ item }\r\n                           key={ index }\r\n                           handleClickAction={ props.handleClickAction } />\r\n            ) }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styles from '../../styles/components/Items/ItemsInner.module.scss';\r\nimport ItemsList from './ItemsList';\r\n\r\nconst GROUP_NAMES = {\r\n    is_fav: 'Избранное',\r\n    is_new: 'Новые вакансии',\r\n    is_jun: 'Вакансии для начинающих',\r\n    is_salary: 'Вакансии с указанным окладом',\r\n    default: 'Без дополнительных параметров',\r\n}\r\n\r\nexport default function ItemsInner(props) {\r\n\r\n    return (\r\n        <div className={ styles[props.itemsList.name] }>\r\n            <h3 className={ styles.title }>{ GROUP_NAMES[props.itemsList.name] }:</h3>\r\n            <ItemsList items={ props.itemsList.items }\r\n                       handleClickAction={ props.handleClickAction } />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n// import styles from './ItemsSection.module.scss';\r\nimport { sortByReduction, checkItems, parseDateString } from '../../helpers';\r\nimport ItemsInner from './ItemsInner';\r\n\r\n/* todo ? вынести эти параметры из всех компонентов глобально? */\r\nconst ACTION_TYPES = {\r\n    favorites: 'is_fav',\r\n    blacklist: 'is_del',\r\n}\r\n\r\nconst FAVORITE_SORT_VALUE = 4;\r\n\r\nconst DEFAULT_SORT = {\r\n    name: 'default',\r\n    value: 0\r\n};\r\n\r\nexport default class ItemsSection extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            groups: props.section.groups || [],\r\n            isLoaded: !!props.section.groups,\r\n            vacancies: props.section.vacancies || []\r\n        }\r\n\r\n        this.favoritesAction = this.favoritesAction.bind(this);\r\n        this.blacklistAction = this.blacklistAction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(!this.props.section.visibleVacancies)\r\n            (async () => {\r\n                const vacancies = await this.getVacancies();\r\n                const groups = this.groupVacancies(vacancies);\r\n\r\n                const loadedData = {\r\n                    visibleVacancies: this.visibleVacancies(),\r\n                    groups,\r\n                    vacancies: this.state.vacancies\r\n                }\r\n\r\n                this.props.handleLoaded(this.props.section.id, loadedData);\r\n\r\n                this.setState({ groups, isLoaded: true })\r\n            })()\r\n    }\r\n    componentDidUpdate(prevAllProps) {\r\n\r\n        const ACTIONS = [\r\n            {\r\n                name: 'favorites',\r\n                init: this.favoritesAction\r\n            },\r\n            {\r\n                name: 'blacklist',\r\n                init: this.blacklistAction\r\n            },\r\n        ]\r\n\r\n        /* todo ? как-то вынести за componentDidUpdate? */\r\n        ACTIONS.forEach(action => this.activityCheck(action, prevAllProps));\r\n    }\r\n\r\n    visibleVacancies() {\r\n        return this.state.vacancies.length - Object.keys(this.props.blacklist[this.props.section.id]).length;\r\n    }\r\n\r\n    activityCheck(action, prevAllProps){\r\n        /** объекты { вакансия: item } / { item: группа } */\r\n        const prevProps = prevAllProps[action.name][this.props.section.id];\r\n        const actualProps = this.props[action.name][this.props.section.id];\r\n\r\n        /** id вакансий */\r\n        const prevIds = Object.keys(prevProps);\r\n        const actualIds = Object.keys(actualProps);\r\n\r\n        if(prevIds.length === actualIds.length) return;\r\n\r\n        /* todo ? убрать if и всё проходить фильтром, стоит ли? */\r\n        if(prevIds.length > actualIds.length) {\r\n            const changedIds = prevIds.filter(id => !actualIds.includes(id));\r\n\r\n            changedIds.forEach(changedId => {\r\n                const parentId = prevProps[changedId];\r\n\r\n                action.init(action.name, changedId, parentId, false)\r\n            })\r\n        } else {\r\n            const changedId = actualIds.find(vacancyId => !prevIds.includes(vacancyId));\r\n            const parentId = actualProps[changedId];\r\n\r\n            action.init(action.name, changedId, parentId, true);\r\n        }\r\n    }\r\n    favoritesAction(type, id, parentId, isAdding) {\r\n        let groups = [...this.state.groups];\r\n        let prevGroup;\r\n        let newGroup;\r\n        let item;\r\n        let itemIndex;\r\n\r\n        /* todo ? избавился от лишних if'ов, но выглядит довольно убого */\r\n        const PARAMS = {\r\n            adding: {\r\n                parentId: parentId,\r\n                newGroupId() {\r\n                    return FAVORITE_SORT_VALUE\r\n                },\r\n                createNewGroup() {\r\n                    return this.createGroup(\"is_fav\", FAVORITE_SORT_VALUE);\r\n                }\r\n            },\r\n            removing: {\r\n                parentId: FAVORITE_SORT_VALUE,\r\n                newGroupId(item) {\r\n                    return item.sort.value\r\n                },\r\n                createNewGroup() {\r\n                    return this.createGroup(item.sort.name, item.sort.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        const currentParams = isAdding ? PARAMS['adding'] : PARAMS['removing'];\r\n\r\n        prevGroup = groups.find(group => group.sortValue === currentParams.parentId);\r\n\r\n        item = prevGroup.items.find((item, index) => {\r\n            itemIndex = index;\r\n            return item.id === id;\r\n        })\r\n\r\n        newGroup = groups.find(group => group.sortValue === currentParams.newGroupId(item));\r\n\r\n        if(!newGroup) {\r\n            newGroup = currentParams.createNewGroup.call(this);\r\n            groups.push(newGroup);\r\n        }\r\n\r\n        item.is_fav = isAdding;\r\n\r\n        newGroup.items.push(item);\r\n\r\n        prevGroup.items.splice(itemIndex, 1);\r\n\r\n        newGroup.haveVisibleItem = checkItems(newGroup.items, 'haveVisibleItem');\r\n        prevGroup.haveVisibleItem = checkItems(prevGroup.items, 'haveVisibleItem');\r\n\r\n        groups = sortByReduction(groups, 'sortValue');\r\n\r\n        this.props.handleLoaded(this.props.section.id, { groups })\r\n\r\n        this.setState({ groups });\r\n    }\r\n\r\n    blacklistAction(type, id, parentId) {\r\n        let groups = [...this.state.groups];\r\n        let vacancies = [...this.state.vacancies];\r\n\r\n        const vacancy = vacancies.find(vacancy => vacancy.id === id);\r\n\r\n        vacancy[ACTION_TYPES[type]] = !vacancy[ACTION_TYPES[type]];\r\n\r\n        /** Группа работодателей по типу */\r\n        let prevGroup;\r\n        let item;\r\n        let itemIndex;\r\n\r\n        /* todo переделать на parentId - section.id, избежать обхода всех items */\r\n        for(let group of groups) {\r\n            let tempIndex;\r\n            item = group.items.find((item, index) => {\r\n                tempIndex = index;\r\n                return item.id === parentId;\r\n            });\r\n\r\n            if(item) {\r\n                itemIndex = tempIndex;\r\n                prevGroup = group;\r\n                break;\r\n            }\r\n        }\r\n\r\n        item.haveVisibleItem = checkItems(item.items, 'is_del', false);\r\n\r\n        let topVacancySort = DEFAULT_SORT;\r\n        item.items.forEach(vacancy => {\r\n            if(!vacancy.is_del && vacancy.sort.value > topVacancySort.value)\r\n                topVacancySort = vacancy.sort;\r\n        })\r\n\r\n        if(!item.is_fav && item.sort.value !== topVacancySort.value) {\r\n            item.sort = topVacancySort;\r\n\r\n            let newGroup = groups.find(group => group.sortValue === item.sort.value);\r\n\r\n            if(!newGroup) {\r\n                newGroup = this.createGroup(item.sort.name, item.sort.value);\r\n                groups.push(newGroup);\r\n            }\r\n\r\n            newGroup.items.push(item);\r\n\r\n            prevGroup.items.splice(itemIndex, 1);\r\n\r\n            newGroup.haveVisibleItem = checkItems(newGroup.items, 'haveVisibleItem');\r\n\r\n            groups = sortByReduction(groups, 'sortValue');\r\n        }\r\n\r\n        prevGroup.haveVisibleItem = checkItems(prevGroup.items, 'haveVisibleItem');\r\n\r\n        groups = sortByReduction(groups, 'sortValue');\r\n\r\n        const updatedData = {\r\n            vacancies,\r\n            groups,\r\n            visibleVacancies: this.visibleVacancies()\r\n        }\r\n\r\n        this.props.handleLoaded(this.props.section.id, updatedData)\r\n\r\n        this.setState({ vacancies, groups });\r\n    }\r\n\r\n    /** DATA */\r\n    async getVacancies() {\r\n        /* todo ? как лучше реализовать отдельный запрос */\r\n        let zeroStep = await this.getVacanciesStep(0,'noExperience');\r\n        let result = zeroStep.vacancies.map(item => {\r\n            item.is_jun = true;\r\n            return item;\r\n        });\r\n\r\n        let firstStep = await this.getVacanciesStep();\r\n        result = [...result, ...firstStep.vacancies];\r\n        let pagesLeft = firstStep.pagesLeft;\r\n\r\n        if(window.LOAD_ALL_DATA)\r\n            while(--pagesLeft > 0) {\r\n                const step = await this.getVacanciesStep(pagesLeft);\r\n                \r\n                if(!step.items) break;\r\n\r\n                result.push(...step.items);\r\n            }\r\n\r\n        this.setState({ vacancies: result })\r\n\r\n        return result;\r\n    }\r\n    async getVacanciesStep(pageNum = 0, exp = 'between1And3') {\r\n        let response = await fetch(`https://api.hh.ru/vacancies?text=frontend&${this.props.section.location}&per_page=${window.LOAD_ALL_DATA ? 100 : 3}&page=${pageNum}&experience=${exp}`);\r\n\r\n        if (response.ok) {\r\n            const json = await response.json();\r\n\r\n            return {\r\n                vacancies: json.items,\r\n                pagesLeft: json.pages\r\n            };\r\n        } else {\r\n            return new Error(\"Ошибка HTTP: \" + response.status);\r\n        }\r\n    }\r\n    groupVacancies(vacancies) {\r\n        let items = {};\r\n        let validVacancies = [];\r\n        const lastValidDate = new Date(new Date() - (window.NEW_IN_DAYS * 24 * 60 * 60 * 1000));\r\n\r\n        // alert(lastValidDate)\r\n\r\n        vacancies.forEach(vacancy => {\r\n            /** Проверка на кейворды в имени  */\r\n            if(!vacancy.name.match(window.NECESSARY) || vacancy.name.match(window.UNNECESSARY)) return\r\n\r\n            const employerId = vacancy.employer.id;\r\n\r\n            if(!items.hasOwnProperty(employerId))\r\n                items[employerId] = {\r\n                    id: employerId,\r\n                    name: vacancy.employer.name,\r\n                    sort: DEFAULT_SORT,\r\n                    items: [],\r\n                    haveVisibleItem: false,\r\n                }\r\n\r\n            let item = items[employerId];\r\n\r\n            /** Проверка дублирования вакансий в группе */\r\n            if(item.items.some(item => item.name === vacancy.name)) return;\r\n\r\n            vacancy.sort = DEFAULT_SORT;\r\n\r\n            /** Проверка на наличие в блеклисте */\r\n            if(this.props.blacklist[this.props.section.id].hasOwnProperty(vacancy.id))\r\n                vacancy.is_del = true;\r\n            else\r\n                item.haveVisibleItem = true;\r\n\r\n            const isJun = vacancy.is_jun || vacancy.name.match(window.JUNIOR);\r\n            const isNew = parseDateString(vacancy.created_at) > lastValidDate;\r\n\r\n            /** Недавняя вакансия в пределах диапазона NEW_IN_DAYS, не добавленная в избранное */\r\n            if(isNew)\r\n                setGroupParams(3, 'is_new');\r\n\r\n            /** Вакансия без опыта, todo повторная проверка */\r\n            if(isJun)\r\n                setGroupParams(2, 'is_jun');\r\n\r\n            /** В вакансии указана зп */\r\n            if(vacancy.salary)\r\n                setGroupParams(1, 'is_salary');\r\n\r\n            function setGroupParams(sortValue, paramName) {\r\n                const sort = {\r\n                    name: paramName,\r\n                    value: sortValue,\r\n                }\r\n\r\n                if(item.sort.value < sortValue)\r\n                    item.sort = sort;\r\n\r\n                if(vacancy.sort.value < sortValue)\r\n                    vacancy.sort = sort;\r\n\r\n                item[paramName] = true;\r\n                vacancy[paramName] = true;\r\n            }\r\n\r\n            item.items.push(vacancy);\r\n            validVacancies.push(vacancy);\r\n        })\r\n\r\n        this.setState({ vacancies: validVacancies })\r\n\r\n        return this.groupItems(Object.values(items));\r\n    }\r\n\r\n    groupItems(items) {\r\n        const groups = {};\r\n\r\n        items.forEach(item => {\r\n            const isFav = this.props.favorites[this.props.section.id].hasOwnProperty(item.id);\r\n\r\n            let groupType;\r\n            let sortValue;\r\n\r\n            if(isFav) {\r\n                groupType = 'is_fav';\r\n                sortValue = FAVORITE_SORT_VALUE;\r\n            } else {\r\n                groupType = item.sort.name;\r\n                sortValue = item.sort.value;\r\n            }\r\n\r\n            if(!groups[groupType])\r\n                groups[groupType] = this.createGroup(groupType, sortValue)\r\n\r\n            groups[groupType].items.push(item);\r\n        })\r\n\r\n        for(let i in groups) {\r\n            const group = groups[i];\r\n            group.haveVisibleItem = checkItems(group.items, 'haveVisibleItem');\r\n        }\r\n\r\n        return sortByReduction(Object.values(groups), 'sortValue');\r\n    }\r\n\r\n    createGroup(name, sortValue, items = []) {\r\n        return {\r\n            name,\r\n            sortValue,\r\n            haveVisibleItem: true,\r\n            items\r\n        }\r\n    }\r\n\r\n    /** Render */\r\n    renderItemsOnLoad() {\r\n        return this.visibleVacancies ? this.renderItems() : this.renderItemsIsEmpty();\r\n    }\r\n    renderItems() {\r\n        return (\r\n            this.state.groups.map((item, index) =>\r\n                item.haveVisibleItem &&\r\n                <ItemsInner itemsList={ item }\r\n                            section={ this.props.section }\r\n                            key={ index }\r\n                            handleClickAction={(type, params) => this.props.handleClickAction(type, this.props.section.id, params)} />\r\n            )\r\n        )\r\n    }\r\n    renderItemsIsEmpty() {\r\n        return <h3>Подходящих вакансий не найдено :(</h3>;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section>\r\n                { this.state.isLoaded ?\r\n                    this.renderItemsOnLoad()\r\n                    :\r\n                    <h3>Загрузка...</h3>\r\n                }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from '../../styles/components/Items/ItemsTitle.module.scss';\r\n\r\nexport default function ItemsTitle(props) {\r\n\r\n    const section = props.section;\r\n\r\n    function handleClick() {\r\n\r\n        if(!section.is_active)\r\n            props.handleClick(section.id);\r\n    }\r\n\r\n    return (\r\n        <div className={ section.is_active ? styles.active : styles.title }\r\n             onClick={ handleClick }>\r\n            { section.name }\r\n            { (section.is_active || section.groups) &&\r\n                <span>: { section.visibleVacancies > 0 ? section.visibleVacancies : '...' }</span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styles from '../../styles/components/Items/Items.module.scss';\r\nimport ItemsSection from './ItemsSection';\r\nimport ItemsTitle from \"./ItemsTitle\";\r\n\r\n\r\nexport default class extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props.regions[0].is_active = true;\r\n\r\n        this.state = {\r\n            sections: this.props.regions,\r\n            activeSectionId: this.props.regions[0].id,\r\n        }\r\n\r\n        this.handleLoaded = this.handleLoaded.bind(this);\r\n        this.handleClickSectionTitle = this.handleClickSectionTitle.bind(this);\r\n    }\r\n\r\n    handleClickSectionTitle(id) {\r\n        const sections = this.state.sections;\r\n        let activeSection;\r\n        let prevActiveSection;\r\n\r\n        for(let section of sections) {\r\n            if(section.id === id)\r\n                activeSection = section;\r\n\r\n            if(section.id === this.state.activeSectionId)\r\n                prevActiveSection = section;\r\n\r\n            if(activeSection && prevActiveSection)\r\n                break;\r\n        }\r\n\r\n        activeSection.is_active = true;\r\n        prevActiveSection.is_active = false;\r\n\r\n        this.setState({ sections , activeSectionId: id });\r\n    }\r\n    /* todo ? приемлемо ли апдейтить стейт из дочернего компонента? (кажется что нет) */\r\n    handleLoaded(id, loadedData) {\r\n        const sections = this.state.sections;\r\n        const activeSection = sections.find(section => section.id === id);\r\n\r\n        for(let i in loadedData)\r\n            activeSection[i] = loadedData[i]\r\n\r\n        this.setState({ sections });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <div className={ styles.nav }>\r\n                    { this.state.sections.map((section, index) =>\r\n                        <ItemsTitle section={ section }\r\n                                    quantity={ this.state.activeQuantity }\r\n                                    handleClick={ this.handleClickSectionTitle }\r\n                                    key={ index } />\r\n                    )}\r\n                </div>\r\n                { this.state.sections.map((section, index) =>\r\n                    section.is_active &&\r\n                    <ItemsSection section={ section }\r\n                                  key={ index }\r\n                                  handleLoaded={ this.handleLoaded }\r\n                                  handleClickAction={ this.props.handleClickAction }\r\n                                  favorites={ this.props.favorites }\r\n                                  blacklist={ this.props.blacklist } />\r\n                )}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from '../styles/components/Alert.module.scss';\r\n\r\nexport default function Alert(props) {\r\n\r\n    return (\r\n        <div className={ styles.alert }\r\n             ref={ props.alertRef }>\r\n            <h2>Описание функционала:</h2>\r\n\r\n            <button className={ styles.close }\r\n                    onClick={ props.closeAlert } />\r\n\r\n            <div className={ styles.item }>\r\n                <h3>В данный момент забираются вакансии с hh.ru по следующим принципам:</h3>\r\n                <ul>\r\n                    <li>Текст поиска - \"frontend\"; <span className={ styles.wip } title='Планируется вывод информации на основе ввода пользователя'>WIP</span></li>\r\n                    <li>\r\n                        Локации поиска: <span className={ styles.wip } title='Планируется вывод информации на основе ввода пользователя'>WIP</span>\r\n                        <ul>\r\n                            <li><i>Екатеринбург, Удалённая работа</i></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        Вакансии фильтруется на наличие ключевых слов в названии: <span className={ styles.wip } title='Планируется вывод информации на основе ввода пользователя'>WIP</span>\r\n                        <ul>\r\n                            <li><i>front|фронт|js|javascript</i></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        Так же название вакансии не должно содержать: <span className={ styles.wip } title='Планируется вывод информации на основе ввода пользователя'>WIP</span>\r\n                        <ul>\r\n                            <li><i>backend|fullstack|SQL|lead|ведущий|angular</i></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        Вакансии группируются по работодателям;\r\n                    </li>\r\n                    <li>\r\n                        Работодатели группируются по следующим приоритетам:\r\n                        <ul>\r\n                            <li>\r\n                                <span className={ styles.fav }>Избранное</span> - формируются при наличии id работодателя соответствующей записи в localStorage;\r\n                            </li>\r\n                            <li>\r\n                                <span className={ styles.new }>Содержит новые вакансии</span> - формируются из работодателей, имеющих размещённую вакансию за последние сутки;\r\n                            </li>\r\n                            <li>\r\n                                <span className={ styles.jun }>Содержит вакансии для начинающих</span> - формируются из работодателей, содержащих вакансию с кейвордами <i>junior|стажер|младший</i>, в группах с высшим приоритетом данные работодатели выделены <span>зеленым заголовком</span>;\r\n                            </li>\r\n                            <li>\r\n                                <span className={ styles.salary }>Содержит вакансии с указанным окладом</span> - вакансии с указанным окладом в группе с высшим приоритетом имеют символ <span>\"$\"</span>\r\n                            </li>\r\n                            <li>\r\n                                <span className={ styles.default }>Без особых параметров</span>\r\n                            </li>\r\n                            <li>\r\n                                <span>Скрытые вакансии (не отображаются)</span> - формируются при наличии id вакансии соответствующей записи в localStorage;\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={ styles.item }>\r\n                <h3>Взаимодействие:</h3>\r\n                <ul>\r\n                    <li>\r\n                        <span>По клику на \"!\" - повторное открытие данного окна;</span>\r\n                    </li>\r\n                    <li>\r\n                        <span>По клику на заголовок регионов переключение между ними;</span>\r\n                        <ul>\r\n                            <li>Запрашиваются у сервера и выводятся соответствующие вакансии;</li>\r\n                            <li>Количество валидных вакансий отображается в заголовке;</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <span>Клик по заголовку работодателя добавляет его в \"избранное\";</span>\r\n                        <ul>\r\n                            <li>Если группы избранного нет - создаётся;</li>\r\n                            <li>Создаётся соответствующая запись в localStorage;</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <span>По клику \"Очистить избранное\";</span>\r\n                        <ul>\r\n                            <li>Все работодатели распределяются из избранного по группам в соответствии вакансии с наивысшем приоритетом;</li>\r\n                            <li>Избранное в localStorage очищается;</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <span>При наведении на вакансию;</span>\r\n                        <ul>\r\n                            <li>Отображается иконка \"удаления\" вакансии;</li>\r\n                            <li>Отображается информация о вакансии: Оклад (при наличии), а так же краткое описание (если описание содержит поисковый запрос - он будет подсвечен в тексте);</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <span>По клику на иконку корзины вакансии;</span>\r\n                        <ul>\r\n                            <li>Вакансия скрывается;</li>\r\n                            <li>Если других вакансий у работодателя нет - скрывается;</li>\r\n                            <li>При наличии других вакансий у работодателя - остаётся в текущей группе / переносится в другую в соответствии с оставшейся вакансии с наивысшем приоритетом;</li>\r\n                            <li>Создаётся соответствующая запись в localStorage;</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <span>По клику \"Вернуть скрытые вакансии\";</span>\r\n                        <ul>\r\n                            <li>Все ранее скрытые вакансии отображаются в соответствующих группах;</li>\r\n                            <li>Скрытые вакансии удаляются из localStorage;</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { setLS, getLS } from '../helpers';\r\nimport Header from '../components/Header';\r\nimport Items from '../components/Items/Items';\r\nimport Alert from \"../components/Alert\";\r\n\r\nexport default class Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /**\r\n         *\r\n         * @type {{favorites: Object, blacklist: Object}}\r\n         * favorites: { 'ekb': [Работодатели] }\r\n         * blacklist: { 'ekb': [Вакансии] }\r\n         */\r\n        this.state = {\r\n            alertShowed: getLS('alert'),\r\n            favorites: this.getDataFromStorage('favorites'),\r\n            blacklist: this.getDataFromStorage('blacklist'),\r\n        }\r\n\r\n        this.alertRef = React.createRef();\r\n\r\n        this.clearItems = this.clearItems.bind(this);\r\n        this.closeByEsc = this.closeByEsc.bind(this);\r\n        this.toggleAlert = this.toggleAlert.bind(this);\r\n        this.alertClickOutside = this.alertClickOutside.bind(this);\r\n        this.handleClickAction = this.handleClickAction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(!this.state.alertShowed)\r\n            this.createAlertHandlers();\r\n    }\r\n\r\n    isBtnActive(type) {\r\n\r\n        for(let location in this.state[type]) {\r\n            if(Object.keys(this.state[type][location]).length)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /** Alert actions */\r\n    toggleAlert(e) {\r\n        e.stopPropagation()\r\n        const status = this.state.alertShowed;\r\n\r\n        status ? this.createAlertHandlers() : this.removeAlertHandlers();\r\n\r\n        setLS('alert',!status);\r\n\r\n        this.setState({ alertShowed: !status })\r\n    }\r\n    createAlertHandlers() {\r\n        document.addEventListener('click', this.alertClickOutside)\r\n        document.addEventListener('keydown', this.closeByEsc)\r\n    }\r\n    removeAlertHandlers() {\r\n        document.removeEventListener('click', this.alertClickOutside);\r\n        document.removeEventListener('keydown', this.closeByEsc)\r\n    }\r\n    alertClickOutside(e) {\r\n        const alert = this.alertRef.current;\r\n\r\n        if (alert && !alert.contains(e.target))\r\n            this.toggleAlert(e);\r\n    }\r\n    closeByEsc(e) {\r\n        if(e.key === 'Escape')\r\n            this.toggleAlert(e);\r\n    }\r\n\r\n    /** Store actions */\r\n    getDataFromStorage(type) {\r\n        const storage = getLS(type);\r\n        const empty = this.createEmptyStore(type);\r\n\r\n        if(!storage || Object.keys(storage) < Object.keys(empty))\r\n            return empty;\r\n        else\r\n            return storage;\r\n    }\r\n    createEmptyStore() {\r\n        const result = {};\r\n\r\n        this.props.regions.forEach(region => result[region.id] = {})\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    /** Btn actions */\r\n    handleClickAction(type, sectionId, params) {\r\n        const items = {...this.state[type][sectionId]};\r\n\r\n        if(items.hasOwnProperty(params.id))\r\n            delete items[params.id];\r\n        else\r\n            items[params.id] = params.parentId;\r\n\r\n        const result = {...this.state[type]};\r\n\r\n        result[sectionId] = items;\r\n\r\n        this.setItems(type, result);\r\n    }\r\n    clearItems(type) {\r\n        const result = this.createEmptyStore(type);\r\n\r\n        this.setItems(type, result);\r\n    }\r\n    setItems(type, payload) {\r\n        this.setState({ [type]: payload });\r\n\r\n        setLS(type, payload);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            !this.state.alertShowed ?\r\n                <Alert closeAlert={ this.toggleAlert } alertRef={ this.alertRef }/>\r\n                :\r\n                <div className=\"main\">\r\n                    <Header clearItems={ this.clearItems }\r\n                            isFavActive={ this.isBtnActive('favorites') }\r\n                            isDelActive={ this.isBtnActive('blacklist') }\r\n                            showAlert={ this.toggleAlert }/>\r\n\r\n                    <Items handleClickAction={ this.handleClickAction }\r\n                           regions={ this.props.regions }\r\n                           favorites={ this.state.favorites }\r\n                           blacklist={ this.state.blacklist } />\r\n                </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport Main from './pages/Main';\n\nexport default function App(props) {\n\n\n\n    return (\n        <div>\n            <Main regions={ props.regions }/>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport App from './App';\n\n// debug\nwindow.LOAD_ALL_DATA = true;\n\nconst REGIONS_PARAMS = [\n    {\n        'id': 'ekb',\n        'name': 'Екатеринбург',\n        'location': 'area=3',\n    },\n    {\n        'id': 'remote',\n        'name': 'Удалённо',\n        'location': 'schedule=remote'\n    },\n]\n\n// Регулярки имени вакансии\nwindow.NEW_IN_DAYS = 1;\nwindow.NECESSARY = new RegExp(/front|фронт|js|javascript/i);\nwindow.UNNECESSARY = new RegExp(/backend|fullstack|SQL|lead|ведущий|angular/i);\nwindow.JUNIOR = new RegExp(/junior|стажер|младший/i);\n/* window.COMPANY_BLACKLIST = ['4932875','46587']; */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App regions={ REGIONS_PARAMS } />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}